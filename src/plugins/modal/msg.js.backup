/*
 * @Descripttion:
 * @Version: 1.0.0
 * @Author: Li Yong
 * @Date: 2022-11-06 22:59:55
 * @LastEditors: 陈红伟 chenhw2019@gmail.com
 * @LastEditTime: 2023-11-13 10:45:30
 */

import Vue from 'vue';
import { Dialog } from 'element-ui';

let custOptions, instance, resolve, reject;
let defaults = {
	title: '提示',
	contentTitle: '',
	content: '',
	size: 'normal',
	btns: [
		{
			type: 'default',
			text: '取消',
			key: 'cancel',
		},
		{
			type: 'primary',
			text: '确认',
			key: 'confirm',
		},
	],
};
let sizeWidths = {
	small: '400px',
	normal: '600px',
	large: '800px',
};
const initInstance = () => {
	const dom = document.createElement('div');
	document.body.appendChild(dom);
	instance = new Vue({
		el: dom,
		data() {
			return {
				showModal: false,
				action: '',
				options: Object.assign({}, defaults, custOptions),
			};
		},
		components: {
			Dialog: Dialog,
		},
		render(h) {
			const btns = this.options.btns.map(btn =>
				h(
					'el-button',
					{
						props: {
							type: btn.type,
						},
						on: {
							click: e => this.handleClose(e, btn.key),
						},
					},
					[btn.text],
				),
			);
			const footer = this.showModal
				? h(
						'span',
						{
							// 如果组件是其它组件的子组件，需为插槽指定名称
							slot: 'footer',
						},
						[...btns],
				  )
				: null;
			const contentText = this.showModal
				? h(
						'div',
						{
							class: 'pt-8 pr-8 pl-8',
						},
						[
							this.options.contentTitle
								? h('i', { class: 'el-icon-info yx-color-warning fz-16 mr-4' })
								: null,
							this.options.contentTitle
								? h('span', { class: 'font-h4-medium yx-color-text-primary' }, [
										this.options.contentTitle,
								  ])
								: null,
							h(
								'p',
								{
									class: `pre-wrap font-h4-regular mt-8 yx-color-text-primary ${
										this.options.contentTitle ? 'ml-20' : ''
									} `,
								},
								[this.options.content],
							),
						],
				  )
				: null;

			return h(
				'Dialog',
				{
					props: {
						visible: this.showModal,
						title: this.options.title,
						width: sizeWidths[this.options.size],
					},
					on: {
						close: e => this.doClose(e),
					},
				},
				[contentText, footer],
			);
		},
		methods: {
			doClose() {
				this.showModal = false;
				custOptions = {};
				reject();
			},
			async handleClose(e, key) {
				this.action = key;
				resolve({ key: this.action, done: this.getSafeClose() });
			},
			getSafeClose() {
				return () => {
					this.$nextTick(() => {
						this.doClose();
					});
				};
			},
		},
	});
};
const showMsg = () => {
	if (!instance) {
		initInstance();
	}

	Vue.nextTick(() => {
		// 重设当前的options，否则会参数无法更新
		instance.options = Object.assign({}, defaults, custOptions);
		instance.showModal = true;
	});
};
// const Modal = function (options) {
// 	if (Vue.prototype.$isServer) return;
// 	custOptions = options;
// 	return new Promise((rs, rj) => {
// 		resolve = rs;
// 		reject = rj;
// 		showMsg();
// 	});
// };

export default {
	show(options, rs, rj) {
		custOptions = options;
		resolve = rs;
		reject = rj;
		showMsg();
	},
};
